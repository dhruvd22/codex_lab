name: Generate Dockerfile

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_regenerate:
        description: 'Force regenerate and commit Dockerfile even if no changes'
        required: false
        default: 'false'
        type: boolean

permissions:
  contents: write

jobs:
  generate:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'github-actions[bot]' }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Generate Dockerfile from template
        run: |
          cat > generate_dockerfile.py << 'EOF'
          #!/usr/bin/env python3
          from pathlib import Path
          from textwrap import dedent

          def generate_dockerfile():
              dockerfile = dedent("""\
              FROM python:3.11-slim

              WORKDIR /app

              COPY requirements.txt ./
              RUN pip install --no-cache-dir -r requirements.txt

              COPY . .

              EXPOSE 8000

              CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
              """)

              Path("Dockerfile").write_text(dockerfile, encoding="utf-8")
              print("Generated Dockerfile successfully")

          if __name__ == "__main__":
              generate_dockerfile()
          EOF
          
          python generate_dockerfile.py
          rm generate_dockerfile.py

      - name: Show Dockerfile content
        run: |
          ls -al Dockerfile
          echo "---"
          cat Dockerfile

      - name: Commit and push Dockerfile if changed
        run: |
          set -euo pipefail
          
          # Check if Dockerfile exists
          if [ ! -f "Dockerfile" ]; then
            echo "❌ ERROR: Dockerfile was not generated!"
            exit 1
          fi
          
          echo "✅ Dockerfile generated successfully"
          
          # Show file info
          echo "📄 Dockerfile info:"
          ls -la Dockerfile
          echo "📝 Dockerfile size: $(wc -c < Dockerfile) bytes"
          
          # Check for changes
          change=$(git status --porcelain Dockerfile || true)
          force_regenerate="${{ github.event.inputs.force_regenerate }}"
          
          if [ -z "$change" ] && [ "$force_regenerate" != "true" ]; then
            echo "✨ Dockerfile is already up to date - no changes needed"
            echo "🎯 This means the generated Dockerfile is identical to the committed version"
            echo "📋 Generated Dockerfile content matches the repository version"
            echo "💡 Use 'force_regenerate: true' in workflow_dispatch to force commit anyway"
            exit 0
          fi
          
          if [ -z "$change" ] && [ "$force_regenerate" == "true" ]; then
            echo "🔧 Force regenerate enabled - will commit even without changes"
            # Touch the file to create a change
            touch Dockerfile
          fi

          echo "🔄 Dockerfile has changes, committing..."
          echo "📊 Changes detected:"
          git diff --stat Dockerfile || true
          
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add Dockerfile
          git commit -m "chore: regenerate Dockerfile"
          git push
          
          echo "✅ Dockerfile successfully committed and pushed"
